{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport axios from 'axios';\nimport { Plus } from '@element-plus/icons-vue';\nexport default {\n  name: 'StudentRegistration',\n  components: {\n    Plus\n  },\n  setup() {\n    const studentForm = reactive({\n      student_id: '',\n      first_name: '',\n      last_name: '',\n      major: '',\n      profile_picture: ''\n    });\n    const loading = ref(false);\n    const qrCode = ref(null);\n    const rules = {\n      student_id: [{\n        required: true,\n        message: 'Veuillez entrer l\\'ID de l\\'étudiant',\n        trigger: 'blur'\n      }, {\n        pattern: /^STU\\d{3}$/,\n        message: 'Format: STU suivi de 3 chiffres',\n        trigger: 'blur'\n      }],\n      first_name: [{\n        required: true,\n        message: 'Veuillez entrer le prénom',\n        trigger: 'blur'\n      }],\n      last_name: [{\n        required: true,\n        message: 'Veuillez entrer le nom',\n        trigger: 'blur'\n      }],\n      major: [{\n        required: true,\n        message: 'Veuillez sélectionner une filière',\n        trigger: 'change'\n      }]\n    };\n    const handleAvatarSuccess = response => {\n      studentForm.profile_picture = response.url;\n    };\n    const beforeAvatarUpload = file => {\n      const isJPG = file.type === 'image/jpeg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        ElMessage.error('La photo doit être au format JPG!');\n      }\n      if (!isLt2M) {\n        ElMessage.error('La taille de la photo ne doit pas dépasser 2MB!');\n      }\n      return isJPG && isLt2M;\n    };\n    const handleSubmit = async () => {\n      loading.value = true;\n      try {\n        const formData = new FormData();\n        Object.keys(studentForm).forEach(key => {\n          formData.append(key, studentForm[key]);\n        });\n        const response = await axios.post('http://localhost:3000/api/students', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        qrCode.value = response.data.qr_code_url;\n        ElMessage.success('Étudiant enregistré avec succès!');\n      } catch (error) {\n        ElMessage.error('Erreur lors de l\\'enregistrement');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const downloadQRCode = () => {\n      const link = document.createElement('a');\n      link.href = qrCode.value;\n      link.download = `qr-code-${studentForm.student_id}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    return {\n      studentForm,\n      rules,\n      loading,\n      qrCode,\n      handleAvatarSuccess,\n      beforeAvatarUpload,\n      handleSubmit,\n      downloadQRCode\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","axios","Plus","name","components","setup","studentForm","student_id","first_name","last_name","major","profile_picture","loading","qrCode","rules","required","message","trigger","pattern","handleAvatarSuccess","response","url","beforeAvatarUpload","file","isJPG","type","isLt2M","size","ElMessage","error","handleSubmit","value","formData","FormData","Object","keys","forEach","key","append","post","headers","localStorage","getItem","data","qr_code_url","success","downloadQRCode","link","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\StudentRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-container\">\r\n    <el-card class=\"registration-card\">\r\n      <h2>Enregistrement d'un étudiant</h2>\r\n      <el-form :model=\"studentForm\" :rules=\"rules\" ref=\"studentForm\" label-width=\"120px\">\r\n        <el-form-item label=\"ID Étudiant\" prop=\"student_id\">\r\n          <el-input v-model=\"studentForm.student_id\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Prénom\" prop=\"first_name\">\r\n          <el-input v-model=\"studentForm.first_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Nom\" prop=\"last_name\">\r\n          <el-input v-model=\"studentForm.last_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Filière\" prop=\"major\">\r\n          <el-select v-model=\"studentForm.major\" placeholder=\"Sélectionnez une filière\">\r\n            <el-option label=\"Informatique\" value=\"Computer Science\" />\r\n            <el-option label=\"Ingénierie\" value=\"Engineering\" />\r\n            <el-option label=\"Business\" value=\"Business\" />\r\n            <el-option label=\"Mathématiques\" value=\"Mathematics\" />\r\n            <el-option label=\"Physique\" value=\"Physics\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Photo de profil\" prop=\"profile_picture\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"http://localhost:3000/api/upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n          >\r\n            <img v-if=\"studentForm.profile_picture\" :src=\"studentForm.profile_picture\" class=\"avatar\">\r\n            <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">\r\n            Enregistrer\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div v-if=\"qrCode\" class=\"qr-code-container\">\r\n        <h3>QR Code généré</h3>\r\n        <img :src=\"qrCode\" alt=\"QR Code\" class=\"qr-code\" />\r\n        <el-button type=\"success\" @click=\"downloadQRCode\">\r\n          Télécharger QR Code\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport axios from 'axios'\r\nimport { Plus } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'StudentRegistration',\r\n  components: {\r\n    Plus\r\n  },\r\n  setup() {\r\n    const studentForm = reactive({\r\n      student_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      major: '',\r\n      profile_picture: ''\r\n    })\r\n    \r\n    const loading = ref(false)\r\n    const qrCode = ref(null)\r\n\r\n    const rules = {\r\n      student_id: [\r\n        { required: true, message: 'Veuillez entrer l\\'ID de l\\'étudiant', trigger: 'blur' },\r\n        { pattern: /^STU\\d{3}$/, message: 'Format: STU suivi de 3 chiffres', trigger: 'blur' }\r\n      ],\r\n      first_name: [\r\n        { required: true, message: 'Veuillez entrer le prénom', trigger: 'blur' }\r\n      ],\r\n      last_name: [\r\n        { required: true, message: 'Veuillez entrer le nom', trigger: 'blur' }\r\n      ],\r\n      major: [\r\n        { required: true, message: 'Veuillez sélectionner une filière', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    const handleAvatarSuccess = (response) => {\r\n      studentForm.profile_picture = response.url\r\n    }\r\n\r\n    const beforeAvatarUpload = (file) => {\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPG) {\r\n        ElMessage.error('La photo doit être au format JPG!')\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('La taille de la photo ne doit pas dépasser 2MB!')\r\n      }\r\n      return isJPG && isLt2M\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      loading.value = true\r\n      try {\r\n        const formData = new FormData()\r\n        Object.keys(studentForm).forEach(key => {\r\n          formData.append(key, studentForm[key])\r\n        })\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/students', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        \r\n        qrCode.value = response.data.qr_code_url\r\n        ElMessage.success('Étudiant enregistré avec succès!')\r\n      } catch (error) {\r\n        ElMessage.error('Erreur lors de l\\'enregistrement')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const downloadQRCode = () => {\r\n      const link = document.createElement('a')\r\n      link.href = qrCode.value\r\n      link.download = `qr-code-${studentForm.student_id}.png`\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      document.body.removeChild(link)\r\n    }\r\n\r\n    return {\r\n      studentForm,\r\n      rules,\r\n      loading,\r\n      qrCode,\r\n      handleAvatarSuccess,\r\n      beforeAvatarUpload,\r\n      handleSubmit,\r\n      downloadQRCode\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.registration-container {\r\n  padding: 20px;\r\n}\r\n\r\n.registration-card {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.avatar-uploader {\r\n  text-align: center;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 178px;\r\n  height: 178px;\r\n}\r\n\r\n.avatar-uploader:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n  line-height: 178px;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n\r\n.qr-code-container {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.qr-code {\r\n  max-width: 200px;\r\n  margin: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"login-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Admin Login\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n        model: $setup.loginForm,\n        rules: $setup.rules,\n        ref: \"loginFormRef\",\n        \"label-width\": \"80px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"Email\",\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.loginForm.email,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.loginForm.email = $event;\n                }),\n                placeholder: \"Enter your email\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"Password\",\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.loginForm.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.loginForm.password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"Enter your password\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleSubmit,\n                loading: $setup.loading\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[2] || (_cache[2] = [_createTextVNode(\"Login\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_component_el_form","model","$setup","loginForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","modelValue","email","_cache","$event","placeholder","_","password","type","_component_el_button","onClick","handleSubmit","loading","_createTextVNode"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>Admin Login</h2>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"Email\" prop=\"email\">\r\n          <el-input v-model=\"loginForm.email\" placeholder=\"Enter your email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Password\" prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"Enter your password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">Login</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter()\r\n    const loginForm = reactive({\r\n      email: '',\r\n      password: ''\r\n    })\r\n    const loading = ref(false)\r\n\r\n    const rules = {\r\n      email: [\r\n        { required: true, message: 'Please enter your email', trigger: 'blur' },\r\n        { type: 'email', message: 'Please enter a valid email address', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: 'Please enter your password', trigger: 'blur' },\r\n        { min: 6, message: 'Password must be at least 6 characters', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      loading.value = true\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/admin/login', loginForm)\r\n        localStorage.setItem('token', response.data.token)\r\n        ElMessage.success('Login successful')\r\n        router.push('/register')\r\n      } catch (error) {\r\n        ElMessage.error(error.response?.data?.message || 'Login failed')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      rules,\r\n      loading,\r\n      handleSubmit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #409EFF;\r\n  margin-bottom: 30px;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAiB;;;;;;;uBAA5BA,mBAAA,CAeM,OAfNC,UAeM,GAdJC,YAAA,CAaUC,kBAAA;IAbD,SAAM;EAAY;IAF/B,WAAAC,QAAA,CAGM;MAAA,OAAoB,C,0BAApBC,mBAAA,CAAoB,YAAhB,aAAW,sBACfH,YAAA,CAUUI,kBAAA;QAVAC,KAAK,EAAEC,MAAA,CAAAC,SAAS;QAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;QAAEC,GAAG,EAAC,cAAc;QAAC,aAAW,EAAC;;QAJhF,WAAAP,QAAA,CAKQ;UAAA,OAEe,CAFfF,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC,OAAO;YAACC,IAAI,EAAC;;YALzC,WAAAV,QAAA,CAMU;cAAA,OAA8E,CAA9EF,YAAA,CAA8Ea,mBAAA;gBANxFC,UAAA,EAM6BR,MAAA,CAAAC,SAAS,CAACQ,KAAK;gBAN5C,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAM6BX,MAAA,CAAAC,SAAS,CAACQ,KAAK,GAAAE,MAAA;gBAAA;gBAAEC,WAAW,EAAC;;;YAN1DC,CAAA;cAQQnB,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC,UAAU;YAACC,IAAI,EAAC;;YAR5C,WAAAV,QAAA,CASU;cAAA,OAAoG,CAApGF,YAAA,CAAoGa,mBAAA;gBAT9GC,UAAA,EAS6BR,MAAA,CAAAC,SAAS,CAACa,QAAQ;gBAT/C,uBAAAJ,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAS6BX,MAAA,CAAAC,SAAS,CAACa,QAAQ,GAAAH,MAAA;gBAAA;gBAAEI,IAAI,EAAC,UAAU;gBAACH,WAAW,EAAC;;;YAT7EC,CAAA;cAWQnB,YAAA,CAEeU,uBAAA;YAbvB,WAAAR,QAAA,CAYU;cAAA,OAAoF,CAApFF,YAAA,CAAoFsB,oBAAA;gBAAzED,IAAI,EAAC,SAAS;gBAAEE,OAAK,EAAEjB,MAAA,CAAAkB,YAAY;gBAAGC,OAAO,EAAEnB,MAAA,CAAAmB;;gBAZpE,WAAAvB,QAAA,CAY6E;kBAAA,OAAKc,MAAA,QAAAA,MAAA,OAZlFU,gBAAA,CAY6E,OAAK,E;;gBAZlFP,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
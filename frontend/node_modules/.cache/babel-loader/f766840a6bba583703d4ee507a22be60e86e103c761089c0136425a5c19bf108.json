{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"login-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Connexion Administrateur\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n        model: $setup.loginForm,\n        rules: $setup.rules,\n        ref: \"loginForm\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.loginForm.email,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.loginForm.email = $event;\n                }),\n                placeholder: \"Email\",\n                \"prefix-icon\": \"el-icon-user\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.loginForm.password,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.loginForm.password = $event;\n                }),\n                type: \"password\",\n                placeholder: \"Mot de passe\",\n                \"prefix-icon\": \"el-icon-lock\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleLogin,\n                loading: $setup.loading\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[2] || (_cache[2] = [_createTextVNode(\" Se connecter \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_component_el_form","model","$setup","loginForm","rules","ref","_component_el_form_item","prop","_component_el_input","modelValue","email","_cache","$event","placeholder","_","password","type","_component_el_button","onClick","handleLogin","loading","_createTextVNode"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2>Connexion Administrateur</h2>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\">\r\n        <el-form-item prop=\"email\">\r\n          <el-input\r\n            v-model=\"loginForm.email\"\r\n            placeholder=\"Email\"\r\n            prefix-icon=\"el-icon-user\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"Mot de passe\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" :loading=\"loading\">\r\n            Se connecter\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const router = useRouter()\r\n    const loginForm = reactive({\r\n      email: '',\r\n      password: ''\r\n    })\r\n    const loading = ref(false)\r\n\r\n    const rules = {\r\n      email: [\r\n        { required: true, message: 'Veuillez entrer votre email', trigger: 'blur' },\r\n        { type: 'email', message: 'Veuillez entrer un email valide', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: 'Veuillez entrer votre mot de passe', trigger: 'blur' },\r\n        { min: 6, message: 'Le mot de passe doit contenir au moins 6 caractÃ¨res', trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n      loading.value = true\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/admin/login', loginForm)\r\n        localStorage.setItem('token', response.data.token)\r\n        router.push('/dashboard')\r\n      } catch (error) {\r\n        ElMessage.error('Email ou mot de passe incorrect')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      loginForm,\r\n      rules,\r\n      loading,\r\n      handleLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAiB;;;;;;;uBAA5BA,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,YAAA,CAyBUC,kBAAA;IAzBD,SAAM;EAAY;IAF/B,WAAAC,QAAA,CAGM;MAAA,OAAiC,C,0BAAjCC,mBAAA,CAAiC,YAA7B,0BAAwB,sBAC5BH,YAAA,CAsBUI,kBAAA;QAtBAC,KAAK,EAAEC,MAAA,CAAAC,SAAS;QAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;QAAEC,GAAG,EAAC;;QAJrD,WAAAP,QAAA,CAKQ;UAAA,OAMe,CANfF,YAAA,CAMeU,uBAAA;YANDC,IAAI,EAAC;UAAO;YALlC,WAAAT,QAAA,CAMU;cAAA,OAIE,CAJFF,YAAA,CAIEY,mBAAA;gBAVZC,UAAA,EAOqBP,MAAA,CAAAC,SAAS,CAACO,KAAK;gBAPpC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAOqBV,MAAA,CAAAC,SAAS,CAACO,KAAK,GAAAE,MAAA;gBAAA;gBACxBC,WAAW,EAAC,OAAO;gBACnB,aAAW,EAAC;;;YATxBC,CAAA;cAYQlB,YAAA,CAQeU,uBAAA;YARDC,IAAI,EAAC;UAAU;YAZrC,WAAAT,QAAA,CAaU;cAAA,OAME,CANFF,YAAA,CAMEY,mBAAA;gBAnBZC,UAAA,EAcqBP,MAAA,CAAAC,SAAS,CAACY,QAAQ;gBAdvC,uBAAAJ,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAcqBV,MAAA,CAAAC,SAAS,CAACY,QAAQ,GAAAH,MAAA;gBAAA;gBAC3BI,IAAI,EAAC,UAAU;gBACfH,WAAW,EAAC,cAAc;gBAC1B,aAAW,EAAC,cAAc;gBAC1B,eAAa,EAAb;;;YAlBZC,CAAA;cAqBQlB,YAAA,CAIeU,uBAAA;YAzBvB,WAAAR,QAAA,CAsBU;cAAA,OAEY,CAFZF,YAAA,CAEYqB,oBAAA;gBAFDD,IAAI,EAAC,SAAS;gBAAEE,OAAK,EAAEhB,MAAA,CAAAiB,WAAW;gBAAGC,OAAO,EAAElB,MAAA,CAAAkB;;gBAtBnE,WAAAtB,QAAA,CAsB4E;kBAAA,OAElEa,MAAA,QAAAA,MAAA,OAxBVU,gBAAA,CAsB4E,gBAElE,E;;gBAxBVP,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
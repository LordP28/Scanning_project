{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"registration-container\"\n};\nvar _hoisted_2 = [\"src\"];\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"qr-code-container\"\n};\nvar _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_Plus = _resolveComponent(\"Plus\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_upload = _resolveComponent(\"el-upload\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"registration-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Enregistrement d'un étudiant\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n        model: $setup.studentForm,\n        rules: $setup.rules,\n        ref: \"studentForm\",\n        \"label-width\": \"120px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"ID Étudiant\",\n            prop: \"student_id\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.studentForm.student_id,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.studentForm.student_id = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"Prénom\",\n            prop: \"first_name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.studentForm.first_name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.studentForm.first_name = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"Nom\",\n            prop: \"last_name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.studentForm.last_name,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.studentForm.last_name = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"Filière\",\n            prop: \"major\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.studentForm.major,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.studentForm.major = $event;\n                }),\n                placeholder: \"Sélectionnez une filière\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"Informatique\",\n                    value: \"Computer Science\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"Ingénierie\",\n                    value: \"Engineering\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"Business\",\n                    value: \"Business\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"Mathématiques\",\n                    value: \"Mathematics\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"Physique\",\n                    value: \"Physics\"\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"Photo de profil\",\n            prop: \"profile_picture\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_upload, {\n                \"class\": \"avatar-uploader\",\n                action: \"http://localhost:3000/api/upload\",\n                \"show-file-list\": false,\n                \"on-success\": $setup.handleAvatarSuccess,\n                \"before-upload\": $setup.beforeAvatarUpload\n              }, {\n                \"default\": _withCtx(function () {\n                  return [$setup.studentForm.profile_picture ? (_openBlock(), _createElementBlock(\"img\", {\n                    key: 0,\n                    src: $setup.studentForm.profile_picture,\n                    \"class\": \"avatar\"\n                  }, null, 8 /* PROPS */, _hoisted_2)) : (_openBlock(), _createBlock(_component_el_icon, {\n                    key: 1,\n                    \"class\": \"avatar-uploader-icon\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_Plus)];\n                    }),\n                    _: 1 /* STABLE */\n                  }))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"on-success\", \"before-upload\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleSubmit,\n                loading: $setup.loading\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[4] || (_cache[4] = [_createTextVNode(\" Enregistrer \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"]), $setup.qrCode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"QR Code généré\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n        src: $setup.qrCode,\n        alt: \"QR Code\",\n        \"class\": \"qr-code\"\n      }, null, 8 /* PROPS */, _hoisted_4), _createVNode(_component_el_button, {\n        type: \"success\",\n        onClick: $setup.downloadQRCode\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[5] || (_cache[5] = [_createTextVNode(\" Télécharger QR Code \")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_withCtx","_createElementVNode","_component_el_form","model","$setup","studentForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","modelValue","student_id","_cache","$event","_","first_name","last_name","_component_el_select","major","placeholder","_component_el_option","value","_component_el_upload","action","handleAvatarSuccess","beforeAvatarUpload","profile_picture","src","_hoisted_2","_createBlock","_component_el_icon","_component_Plus","_component_el_button","type","onClick","handleSubmit","loading","_createTextVNode","qrCode","_hoisted_3","alt","_hoisted_4","downloadQRCode","_createCommentVNode"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\StudentRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-container\">\r\n    <el-card class=\"registration-card\">\r\n      <h2>Enregistrement d'un étudiant</h2>\r\n      <el-form :model=\"studentForm\" :rules=\"rules\" ref=\"studentForm\" label-width=\"120px\">\r\n        <el-form-item label=\"ID Étudiant\" prop=\"student_id\">\r\n          <el-input v-model=\"studentForm.student_id\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Prénom\" prop=\"first_name\">\r\n          <el-input v-model=\"studentForm.first_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Nom\" prop=\"last_name\">\r\n          <el-input v-model=\"studentForm.last_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Filière\" prop=\"major\">\r\n          <el-select v-model=\"studentForm.major\" placeholder=\"Sélectionnez une filière\">\r\n            <el-option label=\"Informatique\" value=\"Computer Science\" />\r\n            <el-option label=\"Ingénierie\" value=\"Engineering\" />\r\n            <el-option label=\"Business\" value=\"Business\" />\r\n            <el-option label=\"Mathématiques\" value=\"Mathematics\" />\r\n            <el-option label=\"Physique\" value=\"Physics\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Photo de profil\" prop=\"profile_picture\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"http://localhost:3000/api/upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n          >\r\n            <img v-if=\"studentForm.profile_picture\" :src=\"studentForm.profile_picture\" class=\"avatar\">\r\n            <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">\r\n            Enregistrer\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div v-if=\"qrCode\" class=\"qr-code-container\">\r\n        <h3>QR Code généré</h3>\r\n        <img :src=\"qrCode\" alt=\"QR Code\" class=\"qr-code\" />\r\n        <el-button type=\"success\" @click=\"downloadQRCode\">\r\n          Télécharger QR Code\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport axios from 'axios'\r\nimport { Plus } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'StudentRegistration',\r\n  components: {\r\n    Plus\r\n  },\r\n  setup() {\r\n    const studentForm = reactive({\r\n      student_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      major: '',\r\n      profile_picture: ''\r\n    })\r\n    \r\n    const loading = ref(false)\r\n    const qrCode = ref(null)\r\n\r\n    const rules = {\r\n      student_id: [\r\n        { required: true, message: 'Veuillez entrer l\\'ID de l\\'étudiant', trigger: 'blur' },\r\n        { pattern: /^STU\\d{3}$/, message: 'Format: STU suivi de 3 chiffres', trigger: 'blur' }\r\n      ],\r\n      first_name: [\r\n        { required: true, message: 'Veuillez entrer le prénom', trigger: 'blur' }\r\n      ],\r\n      last_name: [\r\n        { required: true, message: 'Veuillez entrer le nom', trigger: 'blur' }\r\n      ],\r\n      major: [\r\n        { required: true, message: 'Veuillez sélectionner une filière', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    const handleAvatarSuccess = (response) => {\r\n      studentForm.profile_picture = response.url\r\n    }\r\n\r\n    const beforeAvatarUpload = (file) => {\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPG) {\r\n        ElMessage.error('La photo doit être au format JPG!')\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('La taille de la photo ne doit pas dépasser 2MB!')\r\n      }\r\n      return isJPG && isLt2M\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      loading.value = true\r\n      try {\r\n        const formData = new FormData()\r\n        Object.keys(studentForm).forEach(key => {\r\n          formData.append(key, studentForm[key])\r\n        })\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/students', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        \r\n        qrCode.value = response.data.qr_code_url\r\n        ElMessage.success('Étudiant enregistré avec succès!')\r\n      } catch (error) {\r\n        ElMessage.error('Erreur lors de l\\'enregistrement')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const downloadQRCode = () => {\r\n      const link = document.createElement('a')\r\n      link.href = qrCode.value\r\n      link.download = `qr-code-${studentForm.student_id}.png`\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      document.body.removeChild(link)\r\n    }\r\n\r\n    return {\r\n      studentForm,\r\n      rules,\r\n      loading,\r\n      qrCode,\r\n      handleAvatarSuccess,\r\n      beforeAvatarUpload,\r\n      handleSubmit,\r\n      downloadQRCode\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.registration-container {\r\n  padding: 20px;\r\n}\r\n\r\n.registration-card {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.avatar-uploader {\r\n  text-align: center;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 178px;\r\n  height: 178px;\r\n}\r\n\r\n.avatar-uploader:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n  line-height: 178px;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n\r\n.qr-code-container {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.qr-code {\r\n  max-width: 200px;\r\n  margin: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
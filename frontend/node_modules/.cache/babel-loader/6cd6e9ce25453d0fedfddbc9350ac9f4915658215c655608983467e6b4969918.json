{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/hp/SOFTWARE/OFFICIAL APP/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/hp/SOFTWARE/OFFICIAL APP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, reactive } from 'vue';\nimport axios from 'axios';\nimport { Plus } from '@element-plus/icons-vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'StudentRegistration',\n  components: {\n    Plus: Plus\n  },\n  setup: function setup() {\n    var studentFormRef = ref(null);\n    var studentForm = reactive({\n      student_id: '',\n      first_name: '',\n      last_name: '',\n      major: '',\n      profile_picture: ''\n    });\n    var loading = ref(false);\n    var qrCode = ref(null);\n    var rules = {\n      student_id: [{\n        required: true,\n        message: 'Veuillez entrer l\\'ID de l\\'étudiant',\n        trigger: 'blur'\n      }, {\n        pattern: /^STU\\d{3}$/,\n        message: 'Format: STU suivi de 3 chiffres',\n        trigger: 'blur'\n      }],\n      first_name: [{\n        required: true,\n        message: 'Veuillez entrer le prénom',\n        trigger: 'blur'\n      }],\n      last_name: [{\n        required: true,\n        message: 'Veuillez entrer le nom',\n        trigger: 'blur'\n      }],\n      major: [{\n        required: true,\n        message: 'Veuillez sélectionner une filière',\n        trigger: 'change'\n      }]\n    };\n    var handleAvatarSuccess = function handleAvatarSuccess(response) {\n      studentForm.profile_picture = response.url;\n    };\n    var beforeAvatarUpload = function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        ElMessage.error('La photo doit être au format JPG!');\n      }\n      if (!isLt2M) {\n        ElMessage.error('La taille de la photo ne doit pas dépasser 2MB!');\n      }\n      return isJPG && isLt2M;\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formData, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (studentFormRef.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return studentFormRef.value.validate();\n            case 5:\n              loading.value = true;\n              formData = new FormData();\n              Object.keys(studentForm).forEach(function (key) {\n                formData.append(key, studentForm[key]);\n              });\n              _context.next = 10;\n              return axios.post('http://localhost:3000/api/students', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n                }\n              });\n            case 10:\n              response = _context.sent;\n              qrCode.value = response.data.qr_code_url;\n              ElMessage.success('Étudiant enregistré avec succès!');\n\n              // Réinitialiser le formulaire\n              studentFormRef.value.resetFields();\n              studentForm.profile_picture = '';\n              _context.next = 21;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Erreur lors de l\\'enregistrement:', _context.t0);\n              if (_context.t0.response) {\n                ElMessage.error(_context.t0.response.data.error || 'Erreur lors de l\\'enregistrement');\n              } else {\n                ElMessage.error('Erreur de connexion au serveur');\n              }\n            case 21:\n              _context.prev = 21;\n              loading.value = false;\n              return _context.finish(21);\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 17, 21, 24]]);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var downloadQRCode = function downloadQRCode() {\n      var link = document.createElement('a');\n      link.href = qrCode.value;\n      link.download = \"qr-code-\".concat(studentForm.student_id, \".png\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    return {\n      studentForm: studentForm,\n      studentFormRef: studentFormRef,\n      rules: rules,\n      loading: loading,\n      qrCode: qrCode,\n      handleAvatarSuccess: handleAvatarSuccess,\n      beforeAvatarUpload: beforeAvatarUpload,\n      handleSubmit: handleSubmit,\n      downloadQRCode: downloadQRCode\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","axios","Plus","ElMessage","name","components","setup","studentFormRef","studentForm","student_id","first_name","last_name","major","profile_picture","loading","qrCode","rules","required","message","trigger","pattern","handleAvatarSuccess","response","url","beforeAvatarUpload","file","isJPG","type","isLt2M","size","error","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_callee$","_context","prev","next","value","abrupt","validate","FormData","Object","keys","forEach","key","append","post","headers","concat","localStorage","getItem","sent","data","qr_code_url","success","resetFields","t0","console","finish","stop","apply","arguments","downloadQRCode","link","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\StudentRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-container\">\r\n    <el-card class=\"registration-card\">\r\n      <h2>Enregistrement d'un étudiant</h2>\r\n      <el-form :model=\"studentForm\" :rules=\"rules\" ref=\"studentFormRef\" label-width=\"120px\">\r\n        <el-form-item label=\"ID Étudiant\" prop=\"student_id\">\r\n          <el-input v-model=\"studentForm.student_id\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Prénom\" prop=\"first_name\">\r\n          <el-input v-model=\"studentForm.first_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Nom\" prop=\"last_name\">\r\n          <el-input v-model=\"studentForm.last_name\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Filière\" prop=\"major\">\r\n          <el-select v-model=\"studentForm.major\" placeholder=\"Sélectionnez une filière\">\r\n            <el-option label=\"Informatique\" value=\"Computer Science\" />\r\n            <el-option label=\"Ingénierie\" value=\"Engineering\" />\r\n            <el-option label=\"Business\" value=\"Business\" />\r\n            <el-option label=\"Mathématiques\" value=\"Mathematics\" />\r\n            <el-option label=\"Physique\" value=\"Physics\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Photo de profil\" prop=\"profile_picture\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"http://localhost:3000/api/upload\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n          >\r\n            <img v-if=\"studentForm.profile_picture\" :src=\"studentForm.profile_picture\" class=\"avatar\">\r\n            <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">\r\n            Enregistrer\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div v-if=\"qrCode\" class=\"qr-code-container\">\r\n        <h3>QR Code généré</h3>\r\n        <img :src=\"qrCode\" alt=\"QR Code\" class=\"qr-code\" />\r\n        <el-button type=\"success\" @click=\"downloadQRCode\">\r\n          Télécharger QR Code\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport axios from 'axios'\r\nimport { Plus } from '@element-plus/icons-vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'StudentRegistration',\r\n  components: {\r\n    Plus\r\n  },\r\n  setup() {\r\n    const studentFormRef = ref(null)\r\n    const studentForm = reactive({\r\n      student_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      major: '',\r\n      profile_picture: ''\r\n    })\r\n    \r\n    const loading = ref(false)\r\n    const qrCode = ref(null)\r\n\r\n    const rules = {\r\n      student_id: [\r\n        { required: true, message: 'Veuillez entrer l\\'ID de l\\'étudiant', trigger: 'blur' },\r\n        { pattern: /^STU\\d{3}$/, message: 'Format: STU suivi de 3 chiffres', trigger: 'blur' }\r\n      ],\r\n      first_name: [\r\n        { required: true, message: 'Veuillez entrer le prénom', trigger: 'blur' }\r\n      ],\r\n      last_name: [\r\n        { required: true, message: 'Veuillez entrer le nom', trigger: 'blur' }\r\n      ],\r\n      major: [\r\n        { required: true, message: 'Veuillez sélectionner une filière', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    const handleAvatarSuccess = (response) => {\r\n      studentForm.profile_picture = response.url\r\n    }\r\n\r\n    const beforeAvatarUpload = (file) => {\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPG) {\r\n        ElMessage.error('La photo doit être au format JPG!')\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('La taille de la photo ne doit pas dépasser 2MB!')\r\n      }\r\n      return isJPG && isLt2M\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      if (!studentFormRef.value) return\r\n      \r\n      try {\r\n        await studentFormRef.value.validate()\r\n        loading.value = true\r\n        \r\n        const formData = new FormData()\r\n        Object.keys(studentForm).forEach(key => {\r\n          formData.append(key, studentForm[key])\r\n        })\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/students', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        \r\n        qrCode.value = response.data.qr_code_url\r\n        ElMessage.success('Étudiant enregistré avec succès!')\r\n        \r\n        // Réinitialiser le formulaire\r\n        studentFormRef.value.resetFields()\r\n        studentForm.profile_picture = ''\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'enregistrement:', error)\r\n        if (error.response) {\r\n          ElMessage.error(error.response.data.error || 'Erreur lors de l\\'enregistrement')\r\n        } else {\r\n          ElMessage.error('Erreur de connexion au serveur')\r\n        }\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const downloadQRCode = () => {\r\n      const link = document.createElement('a')\r\n      link.href = qrCode.value\r\n      link.download = `qr-code-${studentForm.student_id}.png`\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      document.body.removeChild(link)\r\n    }\r\n\r\n    return {\r\n      studentForm,\r\n      studentFormRef,\r\n      rules,\r\n      loading,\r\n      qrCode,\r\n      handleAvatarSuccess,\r\n      beforeAvatarUpload,\r\n      handleSubmit,\r\n      downloadQRCode\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.registration-container {\r\n  padding: 20px;\r\n}\r\n\r\n.registration-card {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.avatar-uploader {\r\n  text-align: center;\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 178px;\r\n  height: 178px;\r\n}\r\n\r\n.avatar-uploader:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n  line-height: 178px;\r\n}\r\n\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n\r\n.qr-code-container {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.qr-code {\r\n  max-width: 200px;\r\n  margin: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
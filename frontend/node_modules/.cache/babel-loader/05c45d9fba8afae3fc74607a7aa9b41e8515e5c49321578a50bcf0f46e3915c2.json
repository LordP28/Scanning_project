{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/hp/SOFTWARE/OFFICIAL APP/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/hp/SOFTWARE/OFFICIAL APP/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { Plus } from '@element-plus/icons-vue';\nexport default {\n  name: 'StudentRegistration',\n  components: {\n    Plus: Plus\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var formRef = ref(null);\n    var form = reactive({\n      student_id: '',\n      first_name: '',\n      last_name: '',\n      major: '',\n      profile_picture: null\n    });\n    var loading = ref(false);\n    var rules = {\n      student_id: [{\n        required: true,\n        message: 'Please enter student ID',\n        trigger: 'blur'\n      }, {\n        pattern: /^[A-Z0-9]+$/,\n        message: 'Student ID must contain only uppercase letters and numbers',\n        trigger: 'blur'\n      }],\n      first_name: [{\n        required: true,\n        message: 'Please enter first name',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        message: 'First name must be at least 2 characters',\n        trigger: 'blur'\n      }],\n      last_name: [{\n        required: true,\n        message: 'Please enter last name',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        message: 'Last name must be at least 2 characters',\n        trigger: 'blur'\n      }],\n      major: [{\n        required: true,\n        message: 'Please select a major',\n        trigger: 'change'\n      }]\n    };\n    var handleFileChange = function handleFileChange(file) {\n      form.profile_picture = file.raw;\n    };\n    var beforeUpload = function beforeUpload(file) {\n      var isImage = file.type.startsWith('image/');\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        ElMessage.error('Upload file can only be image format!');\n        return false;\n      }\n      if (!isLt2M) {\n        ElMessage.error('Upload file size can not exceed 2MB!');\n        return false;\n      }\n      return true;\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var formData, response, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (formRef.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return formRef.value.validate();\n            case 5:\n              loading.value = true;\n              formData = new FormData();\n              formData.append('student_id', form.student_id);\n              formData.append('first_name', form.first_name);\n              formData.append('last_name', form.last_name);\n              formData.append('major', form.major);\n              if (form.profile_picture) {\n                formData.append('profile_picture', form.profile_picture);\n              }\n              _context.next = 14;\n              return axios.post('http://localhost:3000/api/students', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  Authorization: \"Bearer \".concat(localStorage.getItem('token'))\n                }\n              });\n            case 14:\n              response = _context.sent;\n              ElMessage.success('Student registered successfully');\n              router.push({\n                name: 'QRCodeDisplay',\n                query: {\n                  qr_code_url: response.data.qr_code_url,\n                  student: JSON.stringify({\n                    student_id: form.student_id,\n                    first_name: form.first_name,\n                    last_name: form.last_name,\n                    major: form.major\n                  })\n                }\n              });\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Registration error:', _context.t0);\n              ElMessage.error(((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || 'Registration failed');\n            case 23:\n              _context.prev = 23;\n              loading.value = false;\n              return _context.finish(23);\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 19, 23, 26]]);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      form: form,\n      formRef: formRef,\n      rules: rules,\n      loading: loading,\n      handleSubmit: handleSubmit,\n      handleFileChange: handleFileChange,\n      beforeUpload: beforeUpload\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","axios","ElMessage","Plus","name","components","setup","router","formRef","form","student_id","first_name","last_name","major","profile_picture","loading","rules","required","message","trigger","pattern","min","handleFileChange","file","raw","beforeUpload","isImage","type","startsWith","isLt2M","size","error","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","response","_error$response","wrap","_callee$","_context","prev","next","value","abrupt","validate","FormData","append","post","headers","Authorization","concat","localStorage","getItem","sent","success","push","query","qr_code_url","data","student","JSON","stringify","t0","console","finish","stop","apply","arguments"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\StudentRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-container\">\r\n    <el-card class=\"registration-card\">\r\n      <h2>Student Registration</h2>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"100px\">\r\n        <el-form-item label=\"Student ID\" prop=\"student_id\">\r\n          <el-input v-model=\"form.student_id\" placeholder=\"Enter student ID\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"First Name\" prop=\"first_name\">\r\n          <el-input v-model=\"form.first_name\" placeholder=\"Enter first name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Last Name\" prop=\"last_name\">\r\n          <el-input v-model=\"form.last_name\" placeholder=\"Enter last name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Major\" prop=\"major\">\r\n          <el-select v-model=\"form.major\" placeholder=\"Select major\">\r\n            <el-option label=\"Computer Science\" value=\"Computer Science\"></el-option>\r\n            <el-option label=\"Engineering\" value=\"Engineering\"></el-option>\r\n            <el-option label=\"Business\" value=\"Business\"></el-option>\r\n            <el-option label=\"Arts\" value=\"Arts\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Profile Picture\" prop=\"profile_picture\">\r\n          <el-upload\r\n            class=\"avatar-uploader\"\r\n            :auto-upload=\"false\"\r\n            :show-file-list=\"false\"\r\n            :on-change=\"handleFileChange\"\r\n            :before-upload=\"beforeUpload\"\r\n          >\r\n            <img v-if=\"form.profile_picture\" :src=\"'http://localhost:3000'+form.profile_picture\" class=\"avatar\">\r\n            <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"loading\">Register Student</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Plus } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'StudentRegistration',\r\n  components: {\r\n    Plus\r\n  },\r\n  setup() {\r\n    const router = useRouter()\r\n    const formRef = ref(null)\r\n    const form = reactive({\r\n      student_id: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      major: '',\r\n      profile_picture: null\r\n    })\r\n    const loading = ref(false)\r\n\r\n    const rules = {\r\n      student_id: [\r\n        { required: true, message: 'Please enter student ID', trigger: 'blur' },\r\n        { pattern: /^[A-Z0-9]+$/, message: 'Student ID must contain only uppercase letters and numbers', trigger: 'blur' }\r\n      ],\r\n      first_name: [\r\n        { required: true, message: 'Please enter first name', trigger: 'blur' },\r\n        { min: 2, message: 'First name must be at least 2 characters', trigger: 'blur' }\r\n      ],\r\n      last_name: [\r\n        { required: true, message: 'Please enter last name', trigger: 'blur' },\r\n        { min: 2, message: 'Last name must be at least 2 characters', trigger: 'blur' }\r\n      ],\r\n      major: [\r\n        { required: true, message: 'Please select a major', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    const handleFileChange = (file) => {\r\n      form.profile_picture = file.raw\r\n    }\r\n\r\n    const beforeUpload = (file) => {\r\n      const isImage = file.type.startsWith('image/')\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isImage) {\r\n        ElMessage.error('Upload file can only be image format!')\r\n        return false\r\n      }\r\n      if (!isLt2M) {\r\n        ElMessage.error('Upload file size can not exceed 2MB!')\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      if (!formRef.value) return\r\n      \r\n      try {\r\n        await formRef.value.validate()\r\n        loading.value = true\r\n        \r\n        const formData = new FormData()\r\n        formData.append('student_id', form.student_id)\r\n        formData.append('first_name', form.first_name)\r\n        formData.append('last_name', form.last_name)\r\n        formData.append('major', form.major)\r\n        \r\n        if (form.profile_picture) {\r\n          formData.append('profile_picture', form.profile_picture)\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:3000/api/students', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n\r\n        ElMessage.success('Student registered successfully')\r\n        router.push({\r\n          name: 'QRCodeDisplay',\r\n          query: {\r\n            qr_code_url: response.data.qr_code_url,\r\n            student: JSON.stringify({\r\n              student_id: form.student_id,\r\n              first_name: form.first_name,\r\n              last_name: form.last_name,\r\n              major: form.major\r\n            })\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('Registration error:', error)\r\n        ElMessage.error(error.response?.data?.error || 'Registration failed')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      form,\r\n      formRef,\r\n      rules,\r\n      loading,\r\n      handleSubmit,\r\n      handleFileChange,\r\n      beforeUpload\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.registration-container {\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.registration-card {\r\n  width: 500px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #409EFF;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.avatar-uploader {\r\n  text-align: center;\r\n}\r\n\r\n.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n  line-height: 178px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
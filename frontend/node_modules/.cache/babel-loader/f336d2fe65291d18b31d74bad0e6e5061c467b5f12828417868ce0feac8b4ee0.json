{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'QRCodeDisplay',\n  setup: function setup() {\n    var router = useRouter();\n    var route = useRoute();\n    var qrCodeUrl = ref('');\n    var studentInfo = ref({});\n    onMounted(function () {\n      // Récupérer les informations du QR code depuis la route\n      var _route$params = route.params,\n        qr_code_url = _route$params.qr_code_url,\n        student = _route$params.student;\n      if (qr_code_url) {\n        qrCodeUrl.value = qr_code_url;\n      }\n      if (student) {\n        studentInfo.value = student;\n      }\n    });\n    var downloadQRCode = function downloadQRCode() {\n      var link = document.createElement('a');\n      link.href = qrCodeUrl.value;\n      link.download = \"qr-code-\".concat(studentInfo.value.student_id, \".png\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    var goToRegistration = function goToRegistration() {\n      router.push('/register');\n    };\n    return {\n      qrCodeUrl: qrCodeUrl,\n      studentInfo: studentInfo,\n      downloadQRCode: downloadQRCode,\n      goToRegistration: goToRegistration\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","useRoute","ElMessage","name","setup","router","route","qrCodeUrl","studentInfo","_route$params","params","qr_code_url","student","value","downloadQRCode","link","document","createElement","href","download","concat","student_id","body","appendChild","click","removeChild","goToRegistration","push"],"sources":["C:\\Users\\hp\\SOFTWARE\\OFFICIAL APP\\frontend\\src\\components\\QRCodeDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"qr-display-container\">\r\n    <el-card class=\"qr-card\">\r\n      <h2>QR Code de l'étudiant</h2>\r\n      <div class=\"student-info\">\r\n        <p><strong>ID:</strong> {{ studentInfo.student_id }}</p>\r\n        <p><strong>Nom:</strong> {{ studentInfo.last_name }}</p>\r\n        <p><strong>Prénom:</strong> {{ studentInfo.first_name }}</p>\r\n        <p><strong>Filière:</strong> {{ studentInfo.major }}</p>\r\n      </div>\r\n      \r\n      <div class=\"qr-code-container\">\r\n        <img :src=\"qrCodeUrl\" alt=\"QR Code\" class=\"qr-code\" />\r\n        <el-button type=\"primary\" @click=\"downloadQRCode\" class=\"download-btn\">\r\n          Télécharger QR Code\r\n        </el-button>\r\n      </div>\r\n\r\n      <div class=\"actions\">\r\n        <el-button @click=\"goToRegistration\">Enregistrer un autre étudiant</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'QRCodeDisplay',\r\n  setup() {\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const qrCodeUrl = ref('')\r\n    const studentInfo = ref({})\r\n\r\n    onMounted(() => {\r\n      // Récupérer les informations du QR code depuis la route\r\n      const { qr_code_url, student } = route.params\r\n      if (qr_code_url) {\r\n        qrCodeUrl.value = qr_code_url\r\n      }\r\n      if (student) {\r\n        studentInfo.value = student\r\n      }\r\n    })\r\n\r\n    const downloadQRCode = () => {\r\n      const link = document.createElement('a')\r\n      link.href = qrCodeUrl.value\r\n      link.download = `qr-code-${studentInfo.value.student_id}.png`\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      document.body.removeChild(link)\r\n    }\r\n\r\n    const goToRegistration = () => {\r\n      router.push('/register')\r\n    }\r\n\r\n    return {\r\n      qrCodeUrl,\r\n      studentInfo,\r\n      downloadQRCode,\r\n      goToRegistration\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.qr-display-container {\r\n  padding: 20px;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.qr-card {\r\n  max-width: 600px;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  color: #409EFF;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.student-info {\r\n  text-align: left;\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.student-info p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.qr-code-container {\r\n  margin: 30px 0;\r\n}\r\n\r\n.qr-code {\r\n  max-width: 300px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dcdfe6;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.download-btn {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions {\r\n  margin-top: 30px;\r\n}\r\n</style> "],"mappings":";AA0BA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAW;AAC/C,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,MAAK,GAAIL,SAAS,CAAC;IACzB,IAAMM,KAAI,GAAIL,QAAQ,CAAC;IACvB,IAAMM,SAAQ,GAAIT,GAAG,CAAC,EAAE;IACxB,IAAMU,WAAU,GAAIV,GAAG,CAAC,CAAC,CAAC;IAE1BC,SAAS,CAAC,YAAM;MACd;MACA,IAAAU,aAAA,GAAiCH,KAAK,CAACI,MAAK;QAApCC,WAAW,GAAAF,aAAA,CAAXE,WAAW;QAAEC,OAAM,GAAAH,aAAA,CAANG,OAAM;MAC3B,IAAID,WAAW,EAAE;QACfJ,SAAS,CAACM,KAAI,GAAIF,WAAU;MAC9B;MACA,IAAIC,OAAO,EAAE;QACXJ,WAAW,CAACK,KAAI,GAAID,OAAM;MAC5B;IACF,CAAC;IAED,IAAME,cAAa,GAAI,SAAjBA,cAAaA,CAAA,EAAU;MAC3B,IAAMC,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;MACvCF,IAAI,CAACG,IAAG,GAAIX,SAAS,CAACM,KAAI;MAC1BE,IAAI,CAACI,QAAO,cAAAC,MAAA,CAAeZ,WAAW,CAACK,KAAK,CAACQ,UAAU,SAAK;MAC5DL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI;MAC9BA,IAAI,CAACS,KAAK,CAAC;MACXR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI;IAChC;IAEA,IAAMW,gBAAe,GAAI,SAAnBA,gBAAeA,CAAA,EAAU;MAC7BrB,MAAM,CAACsB,IAAI,CAAC,WAAW;IACzB;IAEA,OAAO;MACLpB,SAAS,EAATA,SAAS;MACTC,WAAW,EAAXA,WAAW;MACXM,cAAc,EAAdA,cAAc;MACdY,gBAAe,EAAfA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}